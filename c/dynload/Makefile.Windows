##
##	Makefile for dynamic loading on Windows
##


##
##	Variables
##	---------
##

# Missing Windows install locations
SYS_CLOC = c:\Program Files (x86)\Windows Kits\10
SYS_HEADER_LOC_A	= $(SYS_CLOC)\Include\10.0.17763.0\ucrt
SYS_HEADER_LOC_B	= $(SYS_CLOC)\Include\10.0.17763.0\um
SYS_HEADER_LOC_C	= $(SYS_CLOC)\Include\10.0.17763.0\shared
SYS_LIB_LOC_A	= $(SYS_CLOC)\Lib\10.0.17763.0\um\x64
SYS_LIB_LOC_B	= $(SYS_CLOC)\Lib\10.0.17763.0\ucrt\x64
SYS_LIB_LOC_C	= c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\lib\onecore\x64


# Name of the executable to produce
EXE	= testloadWindows.exe

# List of all of the object files in your project
OBJS = \
        main-Windows.obj

# library that we use
LIB		= libTdarwin.dll


# Define the C compiler
CC		= cl

# Flags for compiling - note that Windows uses / instead of - to indicate a flag
CFLAGS	= /I"$(SYS_HEADER_LOC_A)" /I"$(SYS_HEADER_LOC_B)" /I"$(SYS_HEADER_LOC_C)"

# Library paths and libs
LDFLAGS	= /LIBPATH:"$(SYS_LIB_LOC_A)" /LIBPATH:"$(SYS_LIB_LOC_B)" /LIBPATH:"$(SYS_LIB_LOC_C)" /MACHINE:x64
LDLIBS =


##
##	Build Targets
##	-------------
##

# Default target - build the program
# The icacls line grants permisson to run our executable
$(EXE) exe : $(OBJS)
	$(CC) $(CFLAGS) $(OBJS) /link /out:$(EXE) $(LDFLAGS) $(LDLIBS)
	icacls $(EXE) /grant Everyone:RX

##
##	Cleanup Targets
##	---------------
##

clean :
	- del /f $(EXE)
	- del /f $(OBJS)
	- del /f *.pdb

